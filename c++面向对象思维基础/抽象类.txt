//抽象类的应用
//面向抽象类编程
class Shape
{
public:
	virtual double getArea() = 0;//没有函数的实现
};
//如果一个类拥有纯虚函数(一个条件就可以)，叫抽象类
class Rect : public Shape
{
public:
	Rect(int a) {
		this->a = a;
	}
	virtual double getArea()
	{
		cout << "矩形面积为：" << a * a<< endl;
		return a * a;
	}
private:
	int a;
};
class Circle :public Shape {
public:
	Circle(int t)
	{
		this->r = t;
	}
	virtual double getArea()
	{
		cout << "圆面积为：" << 3.14 *r *r<< endl;
		return 3.14 *r *r;
	}
private:
	int r;
};
class Triangle :public Shape {
public:
	Triangle(int a,int b)
	{
		this->a = a;
		this->b = b;
	}
	virtual double getArea() {
		cout << "三角形面积为：" << 0.5*a*b<< endl;
		return 0.5*a*b;
	}
private:
	int a;
	int b;
};
int main()
{
	Shape * sp = new Rect(10);
	sp->getArea();
	Shape *sp1 = new Circle(10);
	sp1->getArea();
	Shape *sp3 = new Triangle(5, 6);
	sp3->getArea();
	
	return 0;
}
