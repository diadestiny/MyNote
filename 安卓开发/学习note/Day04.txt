//RecyclerView Demo
----------------------------------------------------------------------------------
/*MainActivity.class*/

package com.example.day04;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import java.util.ArrayList;
import java.util.List;

        public class MainActivity extends AppCompatActivity {

            private RecyclerView recyclerView;
            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                //设置布局
                setContentView(R.layout.activity_main);

                //找到控件
                recyclerView = this.findViewById(R.id.recycler_view);

                //设置数据
                initDatas();

            }

            /**
             * 这个方法用于设置数据
             */
            private void initDatas() {

                List<String> datas =new ArrayList<>();
                for(int i=0;i<100;i++){
                    datas.add(i+"");
                }
                LinearLayoutManager manager =new LinearLayoutManager(this);
                //设置recyclerView的布局管理器
                recyclerView.setLayoutManager(manager);
                

        //设置数据
        //List<bean> ----Adapter --- 展示数据
        RecyclerViewAdapter adapter =new RecyclerViewAdapter(this,datas);
        recyclerView.setAdapter(adapter);
    }
}

/*RecyclerViewAdapter*/
package com.example.day04;

import android.content.Context;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import java.util.List;

public class RecyclerViewAdapter  extends RecyclerView.Adapter<RecyclerViewAdapter.ItemHolder> {

    private final Context mcontext;
    private final List<String> mdata;

    public RecyclerViewAdapter(Context context ,List<String> datas){
        this.mdata = datas;
        this.mcontext = context;
    }

    @Override
    public ItemHolder onCreateViewHolder(ViewGroup viewGroup, int i) {
        //这里是创建条目的回调函数
        View view = LayoutInflater.from(mcontext).inflate(R.layout.item_view,viewGroup,false);
        return new ItemHolder(view);
    }

    @Override
    public void onBindViewHolder(ItemHolder itemHolder, int i) {
        //这里其实用于绑定数据
        String data  = mdata.get(i);
        //设置数据
        itemHolder.setData(data);
    }

    @Override
    public int getItemCount() {

        //这个方法是用于设置这条目的数量
        if(mdata!=null){
            return mdata.size();
        }
        return 0;
    }

    public class ItemHolder extends RecyclerView.ViewHolder {

        private final TextView textView;
        public ItemHolder(View itemView) {
            super(itemView);
            textView = itemView.findViewById(R.id.text);
        }
        public void setData(String data) {
            textView.setText(data);
        }
    }
}

/*activity_main.xml*/
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"

    android:layout_width="match_parent"
    android:layout_height="match_parent">

<android.support.v7.widget.RecyclerView
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:id="@+id/recycler_view">

</android.support.v7.widget.RecyclerView>
</RelativeLayout>

/*item_view.xml*/
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical">

    <TextView
        android:id="@+id/text"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:background="#660000ff"
        android:gravity="center"
        android:text="1"
        android:textSize="30sp"/>
</LinearLayout>
----------------------------------------------------------------------------------
//QQUI

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@mipmap/bgpic"
    >
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical"
        android:layout_marginTop="50dp"
        android:padding="30dp">

        <TextView
            android:drawableLeft="@mipmap/ic_launcher"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="QQ"
            android:textSize="40sp"/>
        <EditText
            android:layout_marginTop="30dp"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:hint="QQ号码/手机号码/邮箱"/>
        <EditText
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:hint="密码"/>
        <Button
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:text="登录"
            android:textSize="20sp"/>

        <RelativeLayout
            android:layout_marginTop="10dp"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="忘记密码?"
                android:textColor="#00aaff"
                android:textSize="16sp"/>
            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="新用户注册"
                android:layout_alignParentRight="true"
                android:textColor="#00aaff"
                android:textSize="16sp"/>
        </RelativeLayout>

    </LinearLayout>
    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="登录即代表阅读并同意条款"
        android:textSize="20sp"
        android:layout_centerHorizontal="true"
        android:layout_alignParentBottom="true"
        android:textColor="#00aaff"
        android:layout_marginBottom="50dp"/>
</RelativeLayout>
------------------------------------------------------------------------
轮播图：
activity_main.xml：
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout
    xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">
    
<android.support.v4.view.ViewPager
    android:layout_width="match_parent"
    android:layout_height="200dp"
    android:id="@+id/looper_paper">
</android.support.v4.view.ViewPager>

</RelativeLayout>

MainActivity.class：
public class MainActivity extends AppCompatActivity {

    private ViewPager mloopPager;
    private LooperPagerAdaper mlooperPagerAdaper;
    private static List<Integer> sColos =new ArrayList<>();


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        initView();

        //准备数据
        Random random = new Random();
        for(int i=0;i<5;i++){
            sColos.add(Color.argb(random.nextInt(255),random.nextInt(255),random.nextInt(255),random.nextInt(255)));
        }
        //给适配器设置数据
        mlooperPagerAdaper.setData(sColos);
        mlooperPagerAdaper.notifyDataSetChanged();
    }

    private void initView() {
        //第一步,找到这个viewPager控件
        mloopPager = this.findViewById(R.id.looper_paper);
        //设置适配器
        mlooperPagerAdaper = new LooperPagerAdaper();
        mloopPager.setAdapter(mlooperPagerAdaper);
    }
}

LooperPagerAdaper.class:
public class LooperPagerAdaper extends PagerAdapter {

    private List<Integer> mColors =null;

    @Override
    public void destroyItem(@NonNull ViewGroup container, int position,  Object object) {
        container.removeView((View) object);
    }

    @NonNull
    @Override
    public Object instantiateItem(@NonNull ViewGroup container, int position) {
        ImageView imageView = new ImageView(container.getContext());
        imageView.setBackgroundColor(mColors.get(position));
        //设置完数据以后，就添加到容器里
        container.addView(imageView);
        return  imageView;
    }

    @Override
    public int getCount() {
        if(mColors!=null) {
            return mColors.size();
        }
        return 0;
    }

    @Override
    public boolean isViewFromObject(@NonNull View view, @NonNull Object o) {

        return view==o;
    }

    public void setData(List<Integer> Colos) {
        this.mColors =Colos;
    }
}
-----------------------------------------------------------------------------------------------------
