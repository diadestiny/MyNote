TableLayout(表格布局)
学习出处:https://www.runoob.com/w3cnote/android-tutorial-tablelayout.html

tools:text 相当于注释预览

FrameLayout的属性很少就两个,但是在说之前我们先介绍一个东西:
前景图像:永远处于帧布局最上面,直接面对用户的图像,就是不会被覆盖的图片。
两个属性:
android:foreground:*设置改帧布局容器的前景图像
android:foregroundGravity:设置前景图像显示的位置

//好地方:www.runoob.com


适配器C的作用是数据M和视图V之间的桥梁 (MVC)

BaseAdapter：抽象类，实际开发中我们会继承这个类并且重写相关方法，用得最多的一个Adapter！
ArrayAdapter：支持泛型操作，最简单的一个Adapter，只能展现一行文字~
SimpleAdapter：同样具有良好扩展性的一个Adapter，可以自定义多种效果！
SimpleCursorAdapter：用于显示简单文本类型的listView，一般在数据库那里会用到，不过有点过时， 不推荐使用！


ArrayAdapter参数的理解

ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>( context, android.R.layout.simple_list_item_1, StringData); 

这段代码是创建一个数组适配器的代码，里面有三个参数，第一个参数是上下文，就是当前的Activity, 第二个参数是android sdk中自己内置的一个布局，它里面只有一个TextView，
这个参数是表明我们数组中每一条数据的布局是这个view，就是将每一条数据都显示在这个view上面；第三个参数就是我们要显示的数据。
listView会根据这三个参数，遍历adapterData里面的每一条数据，读出一条，显示到第二个参数对应的布局中，这样就形成了我们看到的listView.

example1:
listView = findViewById(R.id.mylistview);
ArrayAdapter<String> adapter  =new ArrayAdapter<String>(this,android.R.layout.simple_list_item_1,strs);
listView.setAdapter(adapter);

example2:
在res/values下加一个xxx.xml文件
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string-array name="myarray">
        <item> 语文</item>
        <item> 数学</item>
        <item> 英语</item>
        <item> 代码</item>
    </string-array>
</resources>
然后在listview的布局中添加android:entries="@array/myarray"

SimpleAdapter的使用
SimpleAdapter myAdapter = new SimpleAdapter(getApplicationContext(), listitem, R.layout.list_item, new String[]{"touxiang", "name", "says"}, new int[]{R.id.imgtou, R.id.name, R.id.says});

BaseAdapter使用教程及方法详解
BaseAdapter是最基础的Adapter类，也是最实用最常用的一个类，但是相比于ArrayAdapter之类的，对初学者来说却比较难理解。
1.BaseAdapter怎么用
在ListView、GridView或者其他的view中，使用setAdapter方法传入new出来的我们的baseAdapter就可以用了。
2.问题就出在这个mBaseAdapter要怎么写了。

BaseAdapter方法详解
学会BaseAdapter其实只需要掌握四个方法：
getCount, getItem, getItemId, getView

getCount : 要绑定的条目的数目，比如格子的数量
getItem : 根据一个索引（位置）获得该位置的对象
getItemId : 获取条目的id
getView : 获取该条目要显示的界面

可以简单的理解为，adapter先从getCount里确定数量，然后循环执行getView方法将条目一个一个绘制出来，所以必须重写的是getCount和getView方法。
而getItem和getItemId是调用某些函数才会触发的方法，如果不需要使用可以暂时不修改。

BaseAdapter优化:
1.复用convertView
2.ViewHolder重用组件

基于回调的事件处理机制
1.什么是方法回调？
文字表述：

答:是将功能定义与功能分开的一种手段,一种解耦合的设计思想;在Java中回调是通过接口来实现的, 作为一种系统架构,必须要有自己的运行环境,且需要为用户提供实现接口;实现依赖于客户,这样就可以 达到接口统一,实现不同,系统通过在不同的状态下"回调"我们的实现类,从而达到接口和实现的分离！

举个简单例子：

比如：你周五放学回家,你问你老妈煮好饭没,你妈说还没煮;然后你跟她说: 老妈,我看下喜羊羊,你煮好饭叫我哈! 分析:你和老妈约定了一个接口,你通过这个接口叫老妈煮饭,当饭煮好了的时候,你老妈 又通过这个接口来反馈你,"饭煮好了"！

2.Android回调的事件处理机制详解：
1）自定义view
2）基于回调的事件传播：
传播的顺序是: 监听器--->view组件的回调方法--->Activity的回调方法