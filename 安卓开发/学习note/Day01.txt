在Activity中加载布局的方法:
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
     *setContentView(R.layout.activity_main);*
    }

在AndroidManifest文件中注册Activity(其实是一个类)
 <activity android:name=".MainActivity">
 </activity>

修改app名称:
 android:label="@string/app_name"
<resources>
    <string name="app_name">DayTest01</string>
</resources>

xml加一个button后，在Activity中添加代码:
Button button1 =findViewById(R.id.xxx);
为button1注册监听器:
button1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                //...
            }
        });

Toast效果代码: *Toast.makeText(MainActivity.this,"You arrived at Huajiang",Toast.LENGTH_SHORT).show();*

//重写方法快捷键ctrl+o(win)

创建右上角的menu和实现功能步骤:
1.在res中新建menu文件夹 在里面加入main Menu resource file
2.在main.xml添加项:
	<item android:id="@+id/study_item"
       	 android:title="Study"/>
    	<item android:id="@+id/play_item"
        	android:title="Play"/>
3.Activity的java代码中重写onCreateOptionsMenu方法 
	@Override
    		public boolean onCreateOptionsMenu(Menu menu) {
     		                getMenuInflater().inflate(R.menu.main,menu);
        			return  true;
    		}
4.Activity的java代码中重写onOptionsItemSelected方法
	@Override
   	 public boolean onOptionsItemSelected(MenuItem item) {
       	 switch (item.getItemId()){
       	      case R.id.study_item:
                      Toast.makeText(MainActivity.this,"我喜欢学习",Toast.LENGTH_SHORT).show();
                      break;
          	      case R.id.play_item:
                      Toast.makeText(MainActivity.this,"我喜欢玩耍",Toast.LENGTH_SHORT).show();
                      break;

        }
        return true;
    }


在button的onClick方法中加上finish(); //等效按下back 销毁当前活动


使用Intent在活动之间通讯
创建好empty activity  关联布局 注册活动 //在button中实验
public void onClick(View v) {
                *Intent intent =new Intent(MainActivity.this,SecondActivity.class);*//显式启动
               *startActivity(intent);*
      }  

//隐式启动
<activity android:name=".Second">
            <intent-filter>
                <action android:name="com.example.day01.Second"/>
                <category android:name="android.intent.category.DEFAULT"/>
            </intent-filter>
 </activity>
java代码:Intent intent=new Intent("com.example.day01.Second"); 

//注意点 new Intent 中 com.example.day01.Second 与 android:name="com.example.day01.Second" 应当一致才能响应

Activity之间的数据传递 
在intent中附近加入
intent.putExtra("extra_data",data);

响应方加入代码:
        *Intent intent =getIntent();*
        *String data =intent.getStringExtra("extra_data");*
        TextView textView = findViewById(R.id.tv_data);
        textView.setText(data);
响应方返回数据:
1.请求方启动代码: startActivityForResult(intent,1);
2.响应方  
        //按钮来操作 包括销毁
        Intent intent =new Intent();
        intent.putExtra("data_return","Hello nihao");
        setResult(RESULT_OK,intent);
        finish();

或者:通过back键来操作:
@Override
    public void onBackPressed() {
        Intent intent =new Intent();
        intent.putExtra("data_return","xxxxx");
        setResult(RESULT_OK,intent);
        finish();
    }
3.请求方重写方法
 @Override
    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        switch (requestCode){
            case 1:
                if(resultCode==RESULT_OK){
                    String returndata = data.getStringExtra("data_return");
                    Log.d("123",returndata);
                }
                break;
                default:
        }
    }

大部分情况下 内存足够的话 一般按back键返回主activity 主activity会执行onRestart()和onStart() 和onResume() 
当内存不足的话 才会回收主活动 不会执行onRestart() 而是执行onCreate()方法

回收之前保留数据方法:
 @Override
    protected void onSaveInstanceState(Bundle outState) {
        super.onSaveInstanceState(outState);
        String tempData ="onSaveInstanceState";
        outState.putString("data_key",tempData);
    }

在oncreate方法里面加入:
if(savedInstanceState!=null){
            String tempData =savedInstanceState.getString("data_key");
        }


